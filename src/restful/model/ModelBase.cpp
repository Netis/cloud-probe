/**
* Netis Agent REST APIs
* Netis Agent 管理平台由 **Agent**, **Daemon**, **Manager** 三个组件组成。   * Agent: 部署在用户环境中采集数据，当前支持 Packet Agent 采集网络数据   * Daemon: 部署在用户环境中通过 REST APIs 管理 Agent   * Manager: 部署在监控环境中通过 REST APIs 管理 Daemon 和 Agent 
*
* OpenAPI spec version: 0.1.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
#include "ModelBase.h"

namespace io {
    namespace swagger {
        namespace server {
            namespace model {

                ModelBase::ModelBase() {
                }

                ModelBase::~ModelBase() {
                }

                std::string ModelBase::toJson(const std::string &value) {
                    return value;
                }

                std::string ModelBase::toJson(const std::time_t &value) {
                    char buf[sizeof "2011-10-08T07:07:09Z"];
                    strftime(buf, sizeof buf, "%FT%TZ", gmtime(&value));
                    return buf;
                }

                int32_t ModelBase::toJson(int32_t value) {
                    return value;
                }

                int64_t ModelBase::toJson(int64_t value) {
                    return value;
                }

                double ModelBase::toJson(double value) {
                    return value;
                }

                bool ModelBase::toJson(bool value) {
                    return value;
                }

                nlohmann::json ModelBase::toJson(std::shared_ptr<ModelBase> content) {
                    return content.get() ? content->toJson() : nlohmann::json();
                }

            }
        }
    }
}
