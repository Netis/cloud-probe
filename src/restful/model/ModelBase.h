/**
* Netis Agent REST APIs
* Netis Agent 管理平台由 **Agent**, **Daemon**, **Manager** 三个组件组成。   * Agent: 部署在用户环境中采集数据，当前支持 Packet Agent 采集网络数据   * Daemon: 部署在用户环境中通过 REST APIs 管理 Agent   * Manager: 部署在监控环境中通过 REST APIs 管理 Daemon 和 Agent 
*
* OpenAPI spec version: 0.1.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * ModelBase.h
 *
 * This is the base class for all model classes
 */

#ifndef ModelBase_H_
#define ModelBase_H_


#include "json.hpp"
#include <ctime>
#include <string>

namespace io {
namespace swagger {
namespace server {
namespace model {

class  ModelBase
{
public:
    ModelBase();
    virtual ~ModelBase();

    virtual void validate() = 0;

    virtual nlohmann::json toJson() const = 0;
    virtual void fromJson(nlohmann::json& json) = 0;

    static std::string toJson( const std::string& value );
    static std::string toJson( const std::time_t& value );
    static int32_t toJson( int32_t value );
    static int64_t toJson( int64_t value );
    static double toJson( double value );
    static bool toJson( bool value );
    static nlohmann::json toJson( std::shared_ptr<ModelBase> content );

};

#define MB_FSET(x, y)\
    if (val.find(#x) != val.end() && !val[#x].is_null() && val[#x] != "") {\
        set##y(val.at(#x));\
    }
#define MB_FCHECK(x)\
    if (val.find(#x) != val.end() && !val[#x].is_null())
}
}
}
}

#endif /* ModelBase_H_ */
