/**
* Netis Agent REST APIs
* Netis Agent 管理平台由 **Agent**, **Daemon**, **Manager** 三个组件组成。   * Agent: 部署在用户环境中采集数据，当前支持 Packet Agent 采集网络数据   * Daemon: 部署在用户环境中通过 REST APIs 管理 Agent   * Manager: 部署在监控环境中通过 REST APIs 管理 Daemon 和 Agent 
*
* OpenAPI spec version: 0.1.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "Error.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

Error::Error()
{
    m_Code = 0;
    m_CodeIsSet = false;
    m_Message = "";
    m_MessageIsSet = false;
    
}

Error::~Error()
{
}

void Error::validate()
{
    // TODO: implement validation
}

nlohmann::json Error::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_CodeIsSet)
    {
        val["code"] = m_Code;
    }
    if(m_MessageIsSet)
    {
        val["message"] = ModelBase::toJson(m_Message);
    }
    

    return val;
}

void Error::fromJson(nlohmann::json& val)
{
    MB_FSET(code, Code)
    MB_FSET(message, Message)
}


int32_t Error::getCode() const
{
    return m_Code;
}
void Error::setCode(int32_t value)
{
    m_Code = value;
    m_CodeIsSet = true;
}
bool Error::codeIsSet() const
{
    return m_CodeIsSet;
}
void Error::unsetCode()
{
    m_CodeIsSet = false;
}
std::string Error::getMessage() const
{
    return m_Message;
}
void Error::setMessage(std::string value)
{
    m_Message = value;
    m_MessageIsSet = true;
}
bool Error::messageIsSet() const
{
    return m_MessageIsSet;
}
void Error::unsetMessage()
{
    m_MessageIsSet = false;
}

}
}
}
}

